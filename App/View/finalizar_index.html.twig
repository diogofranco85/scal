{% extends 'page.html.twig' %}

{% block css %}
    {{ css('toastr') }}
{% endblock %}

{% block content %}
    <div class="box-header">
        <h3 class="box-title">
            Lista de contratos ativos
        </h3>
    </div>
    <table class="{{ datatable_class }}" id="grid" data-page-length='100'>
        <thead>
        <tr>
            <th>Status</th>
            <th>Cód. Cliente</th>
            <th>Cliente</th>
            <th>Contrato</th>
            <th>Hibrido</th>
            <th>Safra</th>
            <th>Ações</th>
        </tr>
        </thead>
        <tbody>
            {% for contrato in contratos %}
            <tr>
                <td>{{ contrato.finalizado == 'N' ? '<span class="label label-info"> Ativo</span>' : '<span class="label label-danger"> Finalizado </span>'  }}</td>
                <td>{{ "%04d"|format(contrato.idcliente) }}</td>
                <td>{{ contrato.nmcliente }}</td>
                <td>{{ contrato.numcontrato }}</td>
                <td>{{ contrato.hibrido }}</td>
                <td>{{ contrato.descricao }}</td>
                {% if usuario.tipo == 2 %}
                    {% if contrato.finalizado == 'N' %}
                    <td>
                        <a href="{{ url('/contrato') }}/{{ contrato.id }}/finalizar" param="{{ contrato.id }}" title="Finalizar Contrato" alt="Finalizar contrato" class="btn btn-sm btn-flat bg-red btnfinalizar"><i class="fa fa-arrow-down"></i> Finalizar</a>
                    </td>
                    {% else %}
                    <td>
                        <a href="{{ url('/contrato') }}/{{ contrato.id }}/reabrir" param="{{ contrato.id }}" title="Reabrir Contrato" alt="Reabrir contrato" class="btn btn-sm btn-flat bg-blue btnReabrir"><i class="fa fa-arrow-up"></i> Reabrir</a>
                    </td>
                    {% endif %}
                {% else %}
                    <td> <span class="label label-default">Somente Administrador</span> </td>    
                {% endif %}
            </tr>
            {% endfor %}
        </tbody>
    </table>

{% endblock %}

{% block js %}
    {{ js('datatables') }}
    {{ js('toastr') }}
    <script>
       $(document).ready(function(){
          
          var groupColumn =0;
       var table = $('#grid').DataTable({
         responsive: true,
          dom: 'Bfrtip',
          buttons: [
              'excel',
              'pdf',
              'print',
          ],
          language: {
            url: '{{ assets('bower_components/datatables.net/js/Portuguese-Brasil.json') }}'
          },
           "columnDefs": [
               { "visible": false, "targets": groupColumn }
           ],
           "order": [[ groupColumn, 'asc' ]],
           "displayLength": 25,
           "drawCallback": function ( settings ) {
               var api = this.api();
               var rows = api.rows( {page:'current'} ).nodes();
               var last=null;

               api.column(groupColumn, {page:'current'} ).data().each( function ( group, i ) {
                   if ( last !== group ) {
                       $(rows).eq( i ).before(
                           '<tr class="group"><td colspan="10"><strong>Situação: </strong> <strong>'+group+'</strong></td></tr>'
                       );

                       last = group;
                   }
               } );
           }
        });

        $('#grid tbody').on( 'click', 'tr.group', function () {
            var currentOrder = table.order()[0];
            if ( currentOrder[0] === groupColumn && currentOrder[1] === 'asc' ) {
                table.order( [ groupColumn, 'desc' ] ).draw();
            }
            else {
                table.order( [ groupColumn, 'asc' ] ).draw();
            }
        } );



        $('a.btnfinalizar').click(function(event){
            event.preventDefault();

            verificarlogin();
            
            const url = $(this).attr('href');
            $.get(url, function(data){
                if(data.status === 200){
                    toastr.success(data.message,'Valorem SCAL', { positionClass: "toast-top-center",});
                    let reload = setInterval(() => {
                            location.reload(true);
                        }, 1000);
                }else if (data.status === 404){ 
                    const msg = prompt('Motivo para finalizar o contrato: \n Digite: \n 1 - Retirada Insuficiente \n 2 - Não teve amostra');
                    if(msg !== null){
                        $.get(`${url}/justify`, { msg }, function(data){
                            
                            if(data.status === 200){
                                toastr.success(data.message,'Valorem SCAL', { positionClass: "toast-bottom-full-width",});
                                let reload = setInterval(() => {
                                    location.reload(true);
                                }, 1000);
                            } 
                        });
                    }else{
                        toastr.warning('O contrato não foi finalizado. Ação cancelada','Valorem SCAL', { positionClass: "toast-top-center"});
                    } 
                }
            })
            return false;
        })   

        $('a.btnReabrir').click(function(event){
            event.preventDefault();

            verificarlogin();
            
            const url = $(this).attr('href');
            $.get(url, function(data){
               if(data.status === 200){
                    toastr.success(data.message,'Valorem SCAL', { positionClass: "toast-top-center",});
                    let reload = setInterval(() => {
                        location.reload(true);
                    }, 1000);
                } 
                
            })
            return false;
        })    


       });
    </script>

{% endblock %}